/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.8-dev */

#ifndef PB_SONGDATAINTERNAL_PB_H_INCLUDED
#define PB_SONGDATAINTERNAL_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _SongDataInternal {
    uint8_t changeLength[16];
    uint8_t syncIn;
    uint8_t syncOut;
    uint8_t bpm;
    uint8_t scale;
    uint8_t root;
    uint8_t delayTime;
    uint8_t delayFeedback;
    uint8_t playingPattern;
    uint8_t patternChain[16];
    uint8_t patternChainLength;
} SongDataInternal;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define SongDataInternal_init_default            {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 0, 0, 0, 0, 0, 0, 0, 0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 0}
#define SongDataInternal_init_zero               {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 0, 0, 0, 0, 0, 0, 0, 0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 0}

/* Field tags (for use in manual encoding/decoding) */
#define SongDataInternal_changeLength_tag        1
#define SongDataInternal_syncIn_tag              2
#define SongDataInternal_syncOut_tag             3
#define SongDataInternal_bpm_tag                 4
#define SongDataInternal_scale_tag               6
#define SongDataInternal_root_tag                7
#define SongDataInternal_delayTime_tag           8
#define SongDataInternal_delayFeedback_tag       9
#define SongDataInternal_playingPattern_tag      10
#define SongDataInternal_patternChain_tag        11
#define SongDataInternal_patternChainLength_tag  12

/* Struct field encoding specification for nanopb */
#define SongDataInternal_FIELDLIST(X, a) \
X(a, STATIC,   FIXARRAY, UINT32,   changeLength,      1) \
X(a, STATIC,   SINGULAR, UINT32,   syncIn,            2) \
X(a, STATIC,   SINGULAR, UINT32,   syncOut,           3) \
X(a, STATIC,   SINGULAR, UINT32,   bpm,               4) \
X(a, STATIC,   SINGULAR, UINT32,   scale,             6) \
X(a, STATIC,   SINGULAR, UINT32,   root,              7) \
X(a, STATIC,   SINGULAR, UINT32,   delayTime,         8) \
X(a, STATIC,   SINGULAR, UINT32,   delayFeedback,     9) \
X(a, STATIC,   SINGULAR, UINT32,   playingPattern,   10) \
X(a, STATIC,   FIXARRAY, UINT32,   patternChain,     11) \
X(a, STATIC,   SINGULAR, UINT32,   patternChainLength,  12)
#define SongDataInternal_CALLBACK NULL
#define SongDataInternal_DEFAULT NULL

extern const pb_msgdesc_t SongDataInternal_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define SongDataInternal_fields &SongDataInternal_msg

/* Maximum encoded size of messages (where known) */
#define SongDataInternal_size                    123

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
